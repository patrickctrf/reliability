from reduction import *

G = nx.Graph()

# The start node is a requirement of the script, every power source must derive from it.
G.add_node("start", value=(0.0, 0.0))

# Value is your (Lambda and MTTR).
# 1/m = Lambda (fails per year). MTTR = mean time to repair (hours)
G.add_node("gerador1", value=(0.1691, horas_para_anos(478)))
G.add_node("gerador2", value=(0.1691, horas_para_anos(478)))
G.add_node("gerador3", value=(0.1691, horas_para_anos(478)))
G.add_node("gerador4", value=(0.1691, horas_para_anos(478)))
G.add_node("barra11", value=(0.000125, horas_para_anos(128)))
G.add_node("barra12", value=(0.000125, horas_para_anos(128)))
G.add_node("barra13", value=(0.000125, horas_para_anos(128)))
G.add_node("barra14", value=(0.000125, horas_para_anos(128)))
G.add_node("tie11", value=(0.0096, horas_para_anos(9.6)))
G.add_node("tie12", value=(0.0096, horas_para_anos(9.6)))
G.add_node("tie13", value=(0.0096, horas_para_anos(9.6)))
G.add_node("cabo11", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo12", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo13", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo21", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo22", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo23", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo31", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo32", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo33", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo41", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo42", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo43", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo51", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo52", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo53", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo61", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo62", value=(0.0141, horas_para_anos(40.4)))
G.add_node("cabo63", value=(0.0141, horas_para_anos(40.4)))
G.add_node("disjuntor11", value=(0.0096, horas_para_anos(9.6)))
G.add_node("disjuntor12", value=(0.0096, horas_para_anos(9.6)))
G.add_node("disjuntor13", value=(0.0096, horas_para_anos(9.6)))
G.add_node("disjuntor14", value=(0.0096, horas_para_anos(9.6)))
G.add_node("disjuntor15", value=(0.0096, horas_para_anos(9.6)))
G.add_node("disjuntor16", value=(0.0096, horas_para_anos(9.6)))
G.add_node("trafo11", value=(0.0153, horas_para_anos(1178.5)))
G.add_node("trafo12", value=(0.0153, horas_para_anos(1178.5)))
G.add_node("trafo21", value=(0.0059, horas_para_anos(297.4)))
G.add_node("trafo22", value=(0.0059, horas_para_anos(297.4)))
G.add_node("trafo23", value=(0.0059, horas_para_anos(297.4)))
G.add_node("trafo24", value=(0.0059, horas_para_anos(297.4)))
G.add_node("tie23", value=(0.0096, horas_para_anos(9.6)))
G.add_node("tie23", value=(0.0096, horas_para_anos(9.6)))
G.add_node("tie23", value=(0.0096, horas_para_anos(9.6)))
G.add_node("barra21", value=(0.000125, horas_para_anos(128)))
G.add_node("barra22", value=(0.000125, horas_para_anos(128)))
G.add_node("barra23", value=(0.000125, horas_para_anos(128)))
G.add_node("barra24", value=(0.000125, horas_para_anos(128)))
G.add_node("barra25", value=(0.000125, horas_para_anos(128)))
G.add_node("barra26", value=(0.000125, horas_para_anos(128)))

# alimentacao superior
G.add_edge("start", "gerador1")
G.add_edge("start", "gerador2")
G.add_edge("start", "gerador3")
G.add_edge("start", "gerador4")
G.add_edge("gerador1", "barra1")
G.add_edge("gerador2", "barra2")
G.add_edge("gerador3", "barra3")
G.add_edge("gerador4", "barra4")
G.add_edge("barra11", "tie11")
G.add_edge("barra12", "tie12")
G.add_edge("barra13", "tie13")
G.add_edge("barra12", "tie11")
G.add_edge("barra13", "tie12")
G.add_edge("barra14", "tie13")

# Ramo esquerdo
G.add_edge("barra11", "cabo11")
G.add_edge("barra11", "cabo12")
G.add_edge("cabo11", "disjuntor11")
G.add_edge("cabo12", "disjuntor12")
G.add_edge("disjuntor11", "cabo21")
G.add_edge("disjuntor12", "cabo22")
G.add_edge("cabo21", "trafo21")
G.add_edge("cabo22", "trafo22")
G.add_edge("trafo21", "cabo31")
G.add_edge("trafo22", "cabo32")
G.add_edge("cabo31", "barra21")
G.add_edge("cabo32", "barra22")
G.add_edge("tie21", "barra21")
G.add_edge("tie21", "barra22")

# Ramo central
G.add_edge("barra12", "cabo13")
G.add_edge("barra14", "cabo15")
G.add_edge("cabo13", "disjuntor13")
G.add_edge("cabo15", "disjuntor15")
G.add_edge("disjuntor13", "cabo23")
G.add_edge("disjuntor15", "cabo25")
G.add_edge("cabo23", "trafo11")
G.add_edge("cabo25", "trafo12")
G.add_edge("trafo11", "cabo33")
G.add_edge("trafo12", "cabo35")
G.add_edge("cabo33", "barra23")
G.add_edge("cabo35", "barra24")
G.add_edge("tie22", "barra23")
G.add_edge("tie22", "barra24")

# Ramo direito
G.add_edge("barra13", "cabo14")
G.add_edge("barra14", "cabo16")
G.add_edge("cabo14", "disjuntor14")
G.add_edge("cabo16", "disjuntor16")
G.add_edge("disjuntor14", "cabo24")
G.add_edge("disjuntor16", "cabo26")
G.add_edge("cabo24", "trafo23")
G.add_edge("cabo26", "trafo24")
G.add_edge("trafo23", "cabo34")
G.add_edge("trafo24", "cabo36")
G.add_edge("cabo34", "barra25")
G.add_edge("cabo36", "barra26")
G.add_edge("tie25", "barra25")
G.add_edge("tie26", "barra26")

# Replace with <YOUR-target-node> for reliability calcs
target_node = "barra21"

# System repairable?
repairable = True

# Reduce the graph
if repairable is True:
    reduced_G, eq_reliability = reduce_graph(G, "start", target_node, repairable)
    print("\n\nO valor de confiabilidade equivalente do seu sistema é: ", eq_reliability)
else:
    reduced_G, eq_lambda = reduce_graph(G, "start", target_node, repairable)
    print("\n\nO valor de Lambda equivalente do seu sistema é: ", eq_lambda)
